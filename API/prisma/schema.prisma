// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  password  String
  role      String
  tags      Tag[]
  posts     Post[]
  reactions Reaction[]
  comments  Comment[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Post {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  image     Images[]
  tag_id    String?    @db.ObjectId
  tag       Tag?       @relation(fields: [tag_id], references: [id])
  user_id   String     @db.ObjectId
  user      User       @relation(fields: [user_id], references: [id])
  comments  Comment[]
  reactions Reaction[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Images {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  filename  String
  data      Bytes
  type      String
  size      Int
  post_id   String   @db.ObjectId
  post      Post     @relation(fields: [post_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  user_id   String   @db.ObjectId
  user      User     @relation(fields: [user_id], references: [id])
  Post      Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  post_id   String   @db.ObjectId
  post      Post     @relation(fields: [post_id], references: [id])
  content   String
  user_id   String   @db.ObjectId
  user      User     @relation(fields: [user_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  post_id   String   @db.ObjectId
  user_id   String   @db.ObjectId
  post      Post     @relation(fields: [post_id], references: [id])
  user      User     @relation(fields: [user_id], references: [id])
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
